// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.6
// source: diagnosis/diagnosis.proto

package diagnosispb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DiagnosisRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ImageBytes    []byte                 `protobuf:"bytes,1,opt,name=imageBytes,proto3" json:"imageBytes,omitempty"`
	Prompt        *string                `protobuf:"bytes,2,opt,name=prompt,proto3,oneof" json:"prompt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiagnosisRequest) Reset() {
	*x = DiagnosisRequest{}
	mi := &file_diagnosis_diagnosis_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiagnosisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosisRequest) ProtoMessage() {}

func (x *DiagnosisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diagnosis_diagnosis_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosisRequest.ProtoReflect.Descriptor instead.
func (*DiagnosisRequest) Descriptor() ([]byte, []int) {
	return file_diagnosis_diagnosis_proto_rawDescGZIP(), []int{0}
}

func (x *DiagnosisRequest) GetImageBytes() []byte {
	if x != nil {
		return x.ImageBytes
	}
	return nil
}

func (x *DiagnosisRequest) GetPrompt() string {
	if x != nil && x.Prompt != nil {
		return *x.Prompt
	}
	return ""
}

type DiagnosisResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ModelResponse string                 `protobuf:"bytes,1,opt,name=modelResponse,proto3" json:"modelResponse,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiagnosisResponse) Reset() {
	*x = DiagnosisResponse{}
	mi := &file_diagnosis_diagnosis_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiagnosisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiagnosisResponse) ProtoMessage() {}

func (x *DiagnosisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diagnosis_diagnosis_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiagnosisResponse.ProtoReflect.Descriptor instead.
func (*DiagnosisResponse) Descriptor() ([]byte, []int) {
	return file_diagnosis_diagnosis_proto_rawDescGZIP(), []int{1}
}

func (x *DiagnosisResponse) GetModelResponse() string {
	if x != nil {
		return x.ModelResponse
	}
	return ""
}

var File_diagnosis_diagnosis_proto protoreflect.FileDescriptor

const file_diagnosis_diagnosis_proto_rawDesc = "" +
	"\n" +
	"\x19diagnosis/diagnosis.proto\x12\tdiagnosis\"Z\n" +
	"\x10DiagnosisRequest\x12\x1e\n" +
	"\n" +
	"imageBytes\x18\x01 \x01(\fR\n" +
	"imageBytes\x12\x1b\n" +
	"\x06prompt\x18\x02 \x01(\tH\x00R\x06prompt\x88\x01\x01B\t\n" +
	"\a_prompt\"9\n" +
	"\x11DiagnosisResponse\x12$\n" +
	"\rmodelResponse\x18\x01 \x01(\tR\rmodelResponse2X\n" +
	"\tDiagnosis\x12K\n" +
	"\fGetDiagnosis\x12\x1b.diagnosis.DiagnosisRequest\x1a\x1c.diagnosis.DiagnosisResponse\"\x00B0Z.github.com/ngure1/hackatsuki/proto/diagnosispbb\x06proto3"

var (
	file_diagnosis_diagnosis_proto_rawDescOnce sync.Once
	file_diagnosis_diagnosis_proto_rawDescData []byte
)

func file_diagnosis_diagnosis_proto_rawDescGZIP() []byte {
	file_diagnosis_diagnosis_proto_rawDescOnce.Do(func() {
		file_diagnosis_diagnosis_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_diagnosis_diagnosis_proto_rawDesc), len(file_diagnosis_diagnosis_proto_rawDesc)))
	})
	return file_diagnosis_diagnosis_proto_rawDescData
}

var file_diagnosis_diagnosis_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_diagnosis_diagnosis_proto_goTypes = []any{
	(*DiagnosisRequest)(nil),  // 0: diagnosis.DiagnosisRequest
	(*DiagnosisResponse)(nil), // 1: diagnosis.DiagnosisResponse
}
var file_diagnosis_diagnosis_proto_depIdxs = []int32{
	0, // 0: diagnosis.Diagnosis.GetDiagnosis:input_type -> diagnosis.DiagnosisRequest
	1, // 1: diagnosis.Diagnosis.GetDiagnosis:output_type -> diagnosis.DiagnosisResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_diagnosis_diagnosis_proto_init() }
func file_diagnosis_diagnosis_proto_init() {
	if File_diagnosis_diagnosis_proto != nil {
		return
	}
	file_diagnosis_diagnosis_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_diagnosis_diagnosis_proto_rawDesc), len(file_diagnosis_diagnosis_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_diagnosis_diagnosis_proto_goTypes,
		DependencyIndexes: file_diagnosis_diagnosis_proto_depIdxs,
		MessageInfos:      file_diagnosis_diagnosis_proto_msgTypes,
	}.Build()
	File_diagnosis_diagnosis_proto = out.File
	file_diagnosis_diagnosis_proto_goTypes = nil
	file_diagnosis_diagnosis_proto_depIdxs = nil
}
